logging:
    level:
        de:
            org:
                dexterity:
                    bookanything: INFO

server:
    port: 8060

spring:
    application:
        name: BookAnythingBackendApplication
    servlet:
        multipart:
            max-file-size: 50MB
            max-request-size: 50MB
    datasource:
        driver-class-name: org.postgresql.Driver
        hikari:
            auto-commit: false
            poolName: Hikari
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://localhost:5432/DBBookAnythingPlatform
        username: dbabookanythingapps01
        password: 1a88a1
    devtools:
        livereload:
            enabled: true
        restart:
            enabled: true
    data:
        jpa:
            repositories:
                bootstrap-mode: deferred
    jpa:
        hibernate:
            # ddl-auto: none
            ddl-auto: update
            naming:
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
                physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        open-in-view: true
        properties:
            hibernate:
                connection:
                    provider_disables_autocommit: true
                generate_statistics: false
                jdbc:
                    batch_size: 25
                    time_zone: UTC
                order_inserts: true
                order_updates: true
                query:
                    fail_on_pagination_over_collection_fetch: true
                    in_clause_parameter_padding: true
                show_sql: true
                format_sql: true
                # dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
    liquibase:
        change-log: classpath:config/liquibase/master.xml
    jackson:
        default-property-inclusion: non_absent

    security:
        oauth2:
            resource-server:
                jwt:
                    jwk-set-uri: http://localhost:9080/realms/dexterity-apps-01/protocol/openid-connect/certs
            client:
                provider:
                    oidc:
                        issuer-uri: http://localhost:9080/realms/dexterity-apps-01
    
                registration:
                    oidc:
                        client-id: web_app
                        client-secret: web_app
                        scope: openid,profile,email

    kafka:
        bootstrap-servers: localhost:9092
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
            properties:
                spring.json.add.type.headers: true
                max.request.size: 52428800
        consumer:
            group-id: elasticsearch-indexer
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            properties:
                spring:
                    deserializer:
                        value:
                            delegate:
                                class: org.springframework.kafka.support.serializer.JsonDeserializer
                    json:
                        trusted:
                            packages: de.grundid.opendatalab.geojson,de.org.dexterity.bookanything.*
                max.partition.fetch.bytes: 52428800

    elasticsearch:
        uris: http://localhost:9200

    docker:
        compose:
            readiness:
                tcp:
                    connect-timeout: 60000ms
                    read-timeout: 60000ms
                wait: never
                timeout: 15s
            # lifecycle-management: start-and-stop
            lifecycle-management: start_only
            start:
                log-level: debug

    ai:
        vertex:
            ai:
                gemini:
                    project-id: alns-dexterity-labs-01
                    credentials-uri: file:/home/andre.nascimento/.config/gcloud/application_default_credentials.json
                    # credentials-uri: file:~/.config/gcloud/client_secret_25147608565_credential.json
                    location: europe-west1
                    chat:
                        options:
                            # max-output-tokens: 256
                            model: gemini-2.5-flash-lite
                            temperature: 0.1
                            top-k: 2
                            top-p: 0.5
                            # stopSequences: null
                            candidateCount: 1
                            # response-mime-type: 'null'
                            # tool-call-backs: []
                            # tool-names: []
                            # google-search-retrieval: true
                            # safety-settings: []

management:
    endpoint:
        health:
            probes:
                enabled: true
            show-details: always
    endpoints:
        web:
            base-path: /management
            exposure:
                include:
                    - configprops
                    - env
                    - health
                    - info
                    - logfile
                    - loggers
                    - threaddump

application:
    security:
        oauth2:
            audience: account,api://default

    domain-settings:
        geolocation:
            update-boundary-via-ia:
                feature-enabled: true
        asset-mgmnt:
            storage-providers:
                minio:
                    url: http://localhost:9900
                    access-key: admin@dexterity.org.de
                    secret-key: admin_1a88a1

springdoc:
    enable-native-support: true
    swagger-ui:
        operationsSorter: alpha
        tagsSorter: alpha
        tryItOutEnabled: true
        oauth:
            client-id: swaggerui-test-app
            realm: dexterity-apps-01
    oauth2:
        authorization-url: http://localhost:9080/realms/dexterity-apps-01/protocol/openid-connect/auth

gadm:
    api:
        base-url: https://geodata.ucdavis.edu/gadm/gadm4.1/json
        file-template: gadm41_[COUNTRY_ALIAS]_[LEVEL_NUMBER].json

topics:
    geolocation:
        geojson-download:
            requested: "geolocation.geojson-download.requested"
            country-data-required: "geolocation.geojson-download.country-data-required"
            failed: "geolocation.geojson-download.failed"
        geojson-file:
            downloaded: "geolocation.geojson-file.downloaded"

